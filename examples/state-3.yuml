// {type:state}
// {generate:true}

(start)[Start]->(running)
(running)[Pause]->(paused)
(running)[Stop]->(end)
(retrieval)[Continue]->(running)
(paused)[Unpause]->(running)
(paused)[requested]->(retrieval)
(retrieval)->(end)


interface Model {
  name: 'module'
}

let start = async (running) : <Model> => {
  let relation = {
    state: 'unload'
  }
  Object.extend(running, relation)
  return (running)
}


start({
  init: 'aRb'
})
